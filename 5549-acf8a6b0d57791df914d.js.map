{"version":3,"file":"5549-acf8a6b0d57791df914d.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./node_modules/monaco-editor/esm/vs/basic-languages/dart/dart.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.1(337587859b1c171314b40503171188b6cea6a32a)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/dart/dart.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: \"'\",\n    close: \"'\",\n    notIn: [\"string\", \"comment\"]\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: [\"string\"]\n  }, {\n    open: \"`\",\n    close: \"`\",\n    notIn: [\"string\", \"comment\"]\n  }, {\n    open: \"/**\",\n    close: \" */\",\n    notIn: [\"string\"]\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: \"<\",\n    close: \">\"\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }],\n  folding: {\n    markers: {\n      start: /^\\s*\\s*#?region\\b/,\n      end: /^\\s*\\s*#?endregion\\b/\n    }\n  }\n};\nvar language = {\n  defaultToken: \"invalid\",\n  tokenPostfix: \".dart\",\n  keywords: [\"abstract\", \"dynamic\", \"implements\", \"show\", \"as\", \"else\", \"import\", \"static\", \"assert\", \"enum\", \"in\", \"super\", \"async\", \"export\", \"interface\", \"switch\", \"await\", \"extends\", \"is\", \"sync\", \"break\", \"external\", \"library\", \"this\", \"case\", \"factory\", \"mixin\", \"throw\", \"catch\", \"false\", \"new\", \"true\", \"class\", \"final\", \"null\", \"try\", \"const\", \"finally\", \"on\", \"typedef\", \"continue\", \"for\", \"operator\", \"var\", \"covariant\", \"Function\", \"part\", \"void\", \"default\", \"get\", \"rethrow\", \"while\", \"deferred\", \"hide\", \"return\", \"with\", \"do\", \"if\", \"set\", \"yield\"],\n  typeKeywords: [\"int\", \"double\", \"String\", \"bool\"],\n  operators: [\"+\", \"-\", \"*\", \"/\", \"~/\", \"%\", \"++\", \"--\", \"==\", \"!=\", \">\", \"<\", \">=\", \"<=\", \"=\", \"-=\", \"/=\", \"%=\", \">>=\", \"^=\", \"+=\", \"*=\", \"~/=\", \"<<=\", \"&=\", \"!=\", \"||\", \"&&\", \"&\", \"|\", \"^\", \"~\", \"<<\", \">>\", \"!\", \">>>\", \"??\", \"?\", \":\", \"|=\"],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  digits: /\\d+(_+\\d+)*/,\n  octaldigits: /[0-7]+(_+[0-7]+)*/,\n  binarydigits: /[0-1]+(_+[0-1]+)*/,\n  hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n  regexpctl: /[(){}\\[\\]\\$\\^|\\-*+?\\.]/,\n  regexpesc: /\\\\(?:[bBdDfnrstvwWn0\\\\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})/,\n  tokenizer: {\n    root: [[/[{}]/, \"delimiter.bracket\"], {\n      include: \"common\"\n    }],\n    common: [[/[a-z_$][\\w$]*/, {\n      cases: {\n        \"@typeKeywords\": \"type.identifier\",\n        \"@keywords\": \"keyword\",\n        \"@default\": \"identifier\"\n      }\n    }], [/[A-Z_$][\\w\\$]*/, \"type.identifier\"], {\n      include: \"@whitespace\"\n    }, [/\\/(?=([^\\\\\\/]|\\\\.)+\\/([gimsuy]*)(\\s*)(\\.|;|,|\\)|\\]|\\}|$))/, {\n      token: \"regexp\",\n      bracket: \"@open\",\n      next: \"@regexp\"\n    }], [/@[a-zA-Z]+/, \"annotation\"], [/[()\\[\\]]/, \"@brackets\"], [/[<>](?!@symbols)/, \"@brackets\"], [/!(?=([^=]|$))/, \"delimiter\"], [/@symbols/, {\n      cases: {\n        \"@operators\": \"delimiter\",\n        \"@default\": \"\"\n      }\n    }], [/(@digits)[eE]([\\-+]?(@digits))?/, \"number.float\"], [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?/, \"number.float\"], [/0[xX](@hexdigits)n?/, \"number.hex\"], [/0[oO]?(@octaldigits)n?/, \"number.octal\"], [/0[bB](@binarydigits)n?/, \"number.binary\"], [/(@digits)n?/, \"number\"], [/[;,.]/, \"delimiter\"], [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"], [/\"/, \"string\", \"@string_double\"], [/'/, \"string\", \"@string_single\"]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/\\/\\*\\*(?!\\/)/, \"comment.doc\", \"@jsdoc\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\/\\/\\/.*$/, \"comment.doc\"], [/\\/\\/.*$/, \"comment\"]],\n    comment: [[/[^\\/*]+/, \"comment\"], [/\\*\\//, \"comment\", \"@pop\"], [/[\\/*]/, \"comment\"]],\n    jsdoc: [[/[^\\/*]+/, \"comment.doc\"], [/\\*\\//, \"comment.doc\", \"@pop\"], [/[\\/*]/, \"comment.doc\"]],\n    regexp: [[/(\\{)(\\d+(?:,\\d*)?)(\\})/, [\"regexp.escape.control\", \"regexp.escape.control\", \"regexp.escape.control\"]], [/(\\[)(\\^?)(?=(?:[^\\]\\\\\\/]|\\\\.)+)/, [\"regexp.escape.control\", {\n      token: \"regexp.escape.control\",\n      next: \"@regexrange\"\n    }]], [/(\\()(\\?:|\\?=|\\?!)/, [\"regexp.escape.control\", \"regexp.escape.control\"]], [/[()]/, \"regexp.escape.control\"], [/@regexpctl/, \"regexp.escape.control\"], [/[^\\\\\\/]/, \"regexp\"], [/@regexpesc/, \"regexp.escape\"], [/\\\\\\./, \"regexp.invalid\"], [/(\\/)([gimsuy]*)/, [{\n      token: \"regexp\",\n      bracket: \"@close\",\n      next: \"@pop\"\n    }, \"keyword.other\"]]],\n    regexrange: [[/-/, \"regexp.escape.control\"], [/\\^/, \"regexp.invalid\"], [/@regexpesc/, \"regexp.escape\"], [/[^\\]]/, \"regexp\"], [/\\]/, {\n      token: \"regexp.escape.control\",\n      next: \"@pop\",\n      bracket: \"@close\"\n    }]],\n    string_double: [[/[^\\\\\"\\$]+/, \"string\"], [/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"/, \"string\", \"@pop\"], [/\\$\\w+/, \"identifier\"]],\n    string_single: [[/[^\\\\'\\$]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/'/, \"string\", \"@pop\"], [/\\$\\w+/, \"identifier\"]]\n  }\n};\nexport { conf, language };"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","end","language","defaultToken","tokenPostfix","keywords","typeKeywords","operators","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","regexpctl","regexpesc","tokenizer","root","include","common","cases","token","bracket","next","whitespace","comment","jsdoc","regexp","regexrange","string_double","string_single"],"sourceRoot":""}