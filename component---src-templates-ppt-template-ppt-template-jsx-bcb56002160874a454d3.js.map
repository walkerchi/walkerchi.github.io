{"version":3,"file":"component---src-templates-ppt-template-ppt-template-jsx-bcb56002160874a454d3.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./node_modules/markdown-it-charts/index.js","webpack://gatsby-starter-hello-world/./node_modules/markdown-it-charts/src/index.js","webpack://gatsby-starter-hello-world/./src/components/MarkdownStaticRender/MarkdownStaticRender.jsx","webpack://gatsby-starter-hello-world/./src/templates/PPTTemplate/PPTTemplate.jsx"],"sourcesContent":["'use strict';\n\nmodule.exports = require('./src/');","var ChartsPlugin = function ChartsPlugin(md) {\n  var tokenInfo = {\n    CHART: 'chart',\n    ECHARTS: 'echarts',\n    HIGHCHARTS: 'highcharts',\n    CHARTIST: 'chartist',\n    C3: 'c3',\n    TAUCHARTS: 'taucharts'\n  };\n  var temp = md.renderer.rules.fence.bind(md.renderer.rules);\n\n  if (Object.freeze) {\n    Object.freeze(tokenInfo);\n  }\n\n  md.renderer.rules.fence = function (tokens, idx, options, env, slf) {\n    var token = tokens[idx];\n    var code = token.content.trim();\n\n    if (Object.keys(tokenInfo).some(function (key) {\n      return token.info === tokenInfo[key];\n    })) {\n      try {\n        var json = JSON.parse(code);\n\n        switch (token.info) {\n          case tokenInfo.CHART:\n            return \"<canvas class=\\\"chartjs\\\">\".concat(JSON.stringify(json), \"</canvas>\");\n            break;\n\n          case tokenInfo.ECHARTS:\n            return \"<div class=\\\"echarts\\\"></div><div class=\\\"echarts-data\\\" style='display:none'>\".concat(JSON.stringify(json), \"</div>\");\n            break;\n\n          case tokenInfo.HIGHCHARTS:\n            return \"<div class=\\\"highcharts\\\"><div class=\\\"highcharts-data\\\" style='display:none'>\".concat(JSON.stringify(json), \"</div></div>\");\n            break;\n\n          case tokenInfo.CHARTIST:\n            return \"<div class='ct-chart ct-golden-section'></div><div class='chartist-data' style='display:none'>\".concat(JSON.stringify(json), \"</div>\");\n            break;\n\n          case tokenInfo.C3:\n            return \"<div class='c3-chart' id=\".concat(json.id, \"></div><div class='c3-data' style='display:none'>\").concat(JSON.stringify(json), \"</div>\");\n            break;\n\n          case tokenInfo.TAUCHARTS:\n            return \"<div class='taucharts' id=\".concat(json.id, \"></div><div class='taucharts-data' style='display:none'>\").concat(JSON.stringify(json), \"</div>\");\n            break;\n\n          default:\n            break;\n        }\n      } catch (err) {\n        return \"<pre>\".concat(err, \"</pre>\");\n      }\n    }\n\n    return temp(tokens, idx, options, env, slf);\n  };\n};\n\nmodule.exports = ChartsPlugin;","import React,{useEffect,useRef,useState} from 'react';\r\nimport './markdownStaticRender.css';\r\nimport '../../styles/markdownStyle.css';\r\n// import 'github-markdown-css/github-markdown.css'\r\n// import '../../styles/mathjaxConfig.css';\r\n// import './mathjax-config';\r\nimport \"mathjax/es5/tex-svg\";\r\n// import mermaid from 'mermaid';\r\nimport MarkdownIt from 'markdown-it';\r\nimport 'highlight.js/styles/docco.css'\r\nimport 'reveal.js/dist/reveal.css';\r\nimport 'reveal.js/dist/theme/black.css';\r\nimport 'abcjs/abcjs-audio.css';\r\nimport mermaid from \"mermaid\";\r\n\r\n\r\n\r\nimport $ from 'jquery'\r\n\r\nmermaid.initialize({ startOnLoad: true });\r\n// import 'katex/dist/katex.min.css'\r\n\r\n// import Markdown from 'reveal.js/plugin/markdown/markdown.esm.js';\r\n/*\r\n    support \r\n        mathjax(latex)  yes\r\n        mermaid         yes\r\n        code-highlight  yes\r\n        emoj            yes\r\n        ppt             yes\r\n*/\r\n\r\n// mermaid.initialize({startOnLoad:true});\r\n\r\n\r\n\r\n\r\n\r\nexport default function MarkdownRender({source,hasToc,isPPT}) {\r\n    // console.log(source)\r\n    // console.log(`isPPT:${isPPT}`)\r\n    // hljs.initHighlightingOnLoad();\r\n    \r\n    \r\n    // let offCanvas = document.querySelector('#offCanvas')\r\n    // if(!offCanvas){\r\n    //     offCanvas=document.createElement('div');\r\n    //     offCanvas.setAttribute('id','offCanvas');\r\n    //     document.body.appendChild(offCanvas);\r\n    // }\r\n    \r\n      const markdown = new MarkdownIt({\r\n        html: true,\r\n        xhtmlOut: false,\r\n        breaks: false,\r\n        langPrefix: \"language-\",\r\n        linkify: true,\r\n        typographer: false,\r\n        quotes: \"“”‘’\",\r\n      })\r\n      .use(require('markdown-it-anchor').default)\r\n      .use(require(\"markdown-it-table-of-contents\"),{includeLevel:[1,2,3,4]})\r\n      .use(require('markdown-it-emoji'),{shortcuts:{\r\n      \"smile\":[\":)\",\":-)\"],\r\n      \"laughing\":\":D\" ,\r\n      \":sweat_smile:\":\"CNM\",\r\n    }})\r\n      //.use(require('@ispicyfish/markdown-it-mermaid'))\r\n      //.use(require('@liradb2000/markdown-it-mermaid'))\r\n    //   .use(require('markdown-it-graphviz'))\r\n      .use(require('markdown-it-highlightjs'))\r\n      .use(require('markdown-it-mathjax3'),{tex: {\r\n        inlineMath: [\r\n          [\"$\", \"$\"],\r\n          [\"\\\\\\\\(\", \"\\\\\\\\)\"],\r\n          [\"$$\", \"$$\"]\r\n        ],\r\n        displayMath: [\r\n          [\"$$\", \"$$\"],\r\n          [\"\\\\\\\\[\", \"\\\\\\\\]\"]\r\n        ],\r\n        processEscapes: true\r\n      }})\r\n      .use(require('markdown-it-revealjs'))\r\n      .use(require('markdown-it-charts'))\r\n\r\n      if(hasToc){\r\n        source = \"\\n[[toc]]\\n\\n\"+source\r\n      }\r\n      if(isPPT){\r\n          console.log('isPPT')\r\n          markdown.enable('revealjs')\r\n      }else{\r\n          console.log('isPDF')\r\n          markdown.disable('revealjs')\r\n      }\r\n\r\n      const ele = useRef(null);\r\n  \r\n      console.log('before render')\r\n      let html = markdown.render(source||\"\")\r\n      console.log('after render')\r\n\r\n      let abcjs,echarts;\r\n\r\n      useEffect(()=>{\r\n        abcjs = require(\"abcjs\");\r\n        echarts = require('echarts/lib/echarts');\r\n        require('echarts/lib/component/grid');\r\n        require('echarts/lib/chart/line');\r\n        // canvas\r\n        let offcanvas = document.createElement('div');\r\n        offcanvas.setAttribute('id', 'offcanvas');\r\n        document.body.appendChild(offcanvas);\r\n        offcanvas = document.querySelector('#offcanvas');\r\n        ele.current.querySelectorAll(\".language-mermaid\").forEach(($el, idx) => {\r\n          mermaid.mermaidAPI.render(\r\n            `chart-${idx}`,\r\n            $el.textContent,\r\n            (svgCode) => {\r\n              $el.innerHTML = svgCode;\r\n            },\r\n            offcanvas\r\n          );\r\n        });\r\n        //- abc music\r\n        \r\n        ele.current.querySelectorAll(\".language-music\").forEach(($el,idx)=>{\r\n          $el.id = `music-abc-${idx}`;\r\n          let visualObjs = abcjs.renderAbc($el.id, $el.innerHTML,{\r\n            scale:0.8,\r\n            scrollHorizontal:true,\r\n            viewportHorizontal:true\r\n          });\r\n          $(`<div id=\"midi-abc-${idx}\"></div>`).appendTo($el);\r\n          $(`<div id=\"audio-abc-${idx}\"></div>`).appendTo($el);\r\n          // let midi = abcjs.synth.getMidiFile(visualObjs[0], {midiOutputType: \"encoded\" });\r\n          // $(`#midi-abc-${idx}`).innerHTML(midi)\r\n         \r\n          var synthControl = new abcjs.synth.SynthController();\r\n          synthControl.load(`#audio-abc-${idx}`, {}, {\r\n            displayPlay:true,\r\n            displayProgress:true,\r\n            displayLoop:true,\r\n            displayRestart:true\r\n          });\r\n          let createSynth = new abcjs.synth.CreateSynth()\r\n          createSynth.init({\r\n            visualObj:visualObjs[0]\r\n          }).then(()=>{\r\n            synthControl.setTune(visualObjs[0])\r\n          })\r\n              // var midiBuffer = new abcjs.synth.CreateSynth();\r\n              // midiBuffer.init({\r\n              //     visualObj: visualObj[0],\r\n              //     options: {\r\n                      \r\n              //     }\r\n              // })\r\n             \r\n        })\r\n  \r\n        //- echarts\r\n\r\n        var echartsLen = $('.echarts').length;\r\n        var echartsChart = [];\r\n        var echartsOption = [];\r\n        for(var j = 0;j < echartsLen;j++){\r\n            echartsChart[j] = echarts.init($('.echarts')[j]);\r\n            echartsOption[j] = $.parseJSON($($('.echarts-data')[j])[0].innerHTML).option;\r\n            echartsChart[j].setOption(echartsOption[j]);\r\n        }\r\n        // reveal ppt\r\n        if(isPPT){\r\n          let Reveal = require('reveal.js').default\r\n          console.log(Reveal)\r\n          let deck = new Reveal({\r\n              // plugins: [ Markdown ]\r\n          })\r\n          deck.initialize();\r\n        }\r\n      },[isPPT,ele])\r\n    \r\n    return  <div className={`markdownrender-container ${isPPT?'':'markdown'}`} dangerouslySetInnerHTML={{__html:html}} ref={ele}></div>\r\n\r\n}\r\n","import React from 'react';\r\nimport {graphql} from 'gatsby'\r\nimport './pptTemplate.css';\r\nimport Navbar from '../../components/Navbar/Navbar'\r\n\r\nimport MarkdownStaticRender from '../../components/MarkdownStaticRender/MarkdownStaticRender'\r\n\r\n\r\n\r\nexport default function PPTTemplate({data}) {\r\n  return (<div className='ppttemplate-container'>\r\n      <Navbar/>\r\n      <MarkdownStaticRender source={data.markdownRemark.rawMarkdownBody} isPPT={true}/>\r\n  </div>);\r\n}\r\nexport const data = graphql`\r\nquery PPTTemplate($fileAbsolutePath: String) {\r\n    markdownRemark(fileAbsolutePath: {eq: $fileAbsolutePath}) {\r\n      rawMarkdownBody\r\n      frontmatter {\r\n        date(formatString: \"YYYY-MM-DD\")\r\n        description\r\n        title\r\n      }\r\n    }\r\n  }\r\n`"],"names":["module","exports","md","tokenInfo","CHART","ECHARTS","HIGHCHARTS","CHARTIST","C3","TAUCHARTS","temp","renderer","rules","fence","bind","Object","freeze","tokens","idx","options","env","slf","token","code","content","trim","keys","some","key","info","json","JSON","parse","concat","stringify","id","err","MarkdownRender","source","hasToc","isPPT","markdown","MarkdownIt","html","xhtmlOut","breaks","langPrefix","linkify","typographer","quotes","use","require","includeLevel","shortcuts","tex","inlineMath","displayMath","processEscapes","console","log","enable","disable","ele","useRef","abcjs","echarts","render","useEffect","offcanvas","document","createElement","setAttribute","body","appendChild","querySelector","current","querySelectorAll","forEach","$el","mermaid","textContent","svgCode","innerHTML","visualObjs","renderAbc","scale","scrollHorizontal","viewportHorizontal","$","appendTo","synthControl","synth","SynthController","load","displayPlay","displayProgress","displayLoop","displayRestart","CreateSynth","init","visualObj","then","setTune","echartsLen","length","echartsChart","echartsOption","j","option","setOption","Reveal","initialize","className","dangerouslySetInnerHTML","__html","ref","startOnLoad","PPTTemplate","data","markdownRemark","rawMarkdownBody"],"sourceRoot":""}