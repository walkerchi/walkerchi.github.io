{"version":3,"file":"7047-ad12de3bcedf1b0f1284.js","mappings":";uNAOA,IAAIA,EAAO,CACTC,YAAa,wFACbC,SAAU,CACRC,aAAc,CAAC,MAAO,OACtBC,YAAa,KAEfC,QAAS,CACPC,QAAS,CACPC,MAAO,IAAIC,OAAO,mBAClBC,IAAK,IAAID,OAAO,yBAIlBE,EAAW,CACbC,aAAc,GACdC,YAAY,EACZC,aAAc,QACdC,MAAO,qCACPC,SAAU,CAAC,QAAS,QAAS,UAAW,OAAQ,MAAO,OAAQ,OAAQ,QAAS,MAAO,OAAQ,MAAO,OAAQ,OAAQ,QAAS,MAAO,KAAM,MAAO,MAAO,MAAO,MAAO,OAAQ,MAAO,OAAQ,MAAO,OAAQ,MAAO,OAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,QAAS,MAAO,OAAQ,OAAQ,MAAO,IAAK,MAAO,OAAQ,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAAQ,OAAQ,OAAQ,OAAQ,QAC/aC,QAAS,WACTC,QAAS,yEACTC,UAAW,CACTC,KAAM,CAAC,CAAC,iBAAkB,uBAAwB,CAAC,gBAAiB,CAClEC,MAAO,CACLC,KAAM,sBACN,YAAa,CACXC,MAAO,cAET,WAAY,MAEZ,CAAC,aAAc,IAAK,CAAC,OAAQ,WAAY,CAAC,MAAO,CACnDA,MAAO,SACPC,KAAM,gBACJ,CAAC,iBAAkB,CAAC,GAAI,WAAY,CAAC,oBAAqB,CAAC,YAAa,GAAI,WAAY,CAAC,oBAAqB,CAAC,YAAa,GAAI,WAAY,CAAC,WAAY,aAAc,CAAC,sBAAuB,gBAAiB,CAAC,2BAA4B,gBAAiB,CAAC,oBAAqB,cAAe,CAAC,gBAAiB,gBAAiB,CAAC,MAAO,UAAW,CAAC,OAAQ,aAAc,CAAC,MAAO,SAAU,mBAAoB,CAAC,MAAO,SAAU,mBAAoB,CAAC,IAAK,CACpcH,MAAO,CACL,OAAQ,SACR,WAAY,CACVE,MAAO,SACPC,KAAM,gBAGR,CAAC,IAAK,CACRH,MAAO,CACL,OAAQ,SACR,WAAY,CACVE,MAAO,SACPC,KAAM,iBAIZC,OAAQ,CAAC,CAAC,aAAc,UAAW,CAAC,WAAY,iBAAkB,CAAC,KAAM,yBAA0B,CAAC,KAAM,yBAA0B,CAAC,KAAM,CACzIJ,MAAO,CACL,SAAU,CACRE,MAAO,SACPC,KAAM,2BAER,WAAY,YAEZ,CAAC,OAAQ,CACXH,MAAO,CACL,UAAW,CACTE,MAAO,SACPC,KAAM,QAER,WAAY,YAEZ,CAAC,IAAK,WACVE,WAAY,CAAC,CAAC,YAAa,CACzBL,MAAO,CACL,UAAW,CACTE,MAAO,SACPC,KAAM,QAER,WAAY,YAEZ,CAAC,YAAa,UAAW,CAAC,QAAS,UAAW,CAAC,WAAY,iBAAkB,CAAC,KAAM,yBAA0B,CAAC,KAAM,CACvHD,MAAO,eACPC,KAAM,4BACJ,CAAC,IAAK,WACVG,QAAS,CAAC,CAAC,QAAS,WAAY,CAAC,IAAK,YACtCC,WAAY,CAAC,CAAC,YAAa,UAAW,CAAC,MAAO,UAAW,CAAC,OAAQ,WAAY,CAAC,YAAa,CAC1FL,MAAO,SACPC,KAAM,SACJ,CAAC,KAAM","sources":["webpack://gatsby-starter-hello-world/./node_modules/monaco-editor/esm/vs/basic-languages/mips/mips.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.1(337587859b1c171314b40503171188b6cea6a32a)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/mips/mips.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    blockComment: [\"###\", \"###\"],\n    lineComment: \"#\"\n  },\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*#region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  ignoreCase: false,\n  tokenPostfix: \".mips\",\n  regEx: /\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,\n  keywords: [\".data\", \".text\", \"syscall\", \"trap\", \"add\", \"addu\", \"addi\", \"addiu\", \"and\", \"andi\", \"div\", \"divu\", \"mult\", \"multu\", \"nor\", \"or\", \"ori\", \"sll\", \"slv\", \"sra\", \"srav\", \"srl\", \"srlv\", \"sub\", \"subu\", \"xor\", \"xori\", \"lhi\", \"lho\", \"lhi\", \"llo\", \"slt\", \"slti\", \"sltu\", \"sltiu\", \"beq\", \"bgtz\", \"blez\", \"bne\", \"j\", \"jal\", \"jalr\", \"jr\", \"lb\", \"lbu\", \"lh\", \"lhu\", \"lw\", \"li\", \"la\", \"sb\", \"sh\", \"sw\", \"mfhi\", \"mflo\", \"mthi\", \"mtlo\", \"move\"],\n  symbols: /[\\.,\\:]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [[/\\$[a-zA-Z_]\\w*/, \"variable.predefined\"], [/[.a-zA-Z_]\\w*/, {\n      cases: {\n        this: \"variable.predefined\",\n        \"@keywords\": {\n          token: \"keyword.$0\"\n        },\n        \"@default\": \"\"\n      }\n    }], [/[ \\t\\r\\n]+/, \"\"], [/#.*$/, \"comment\"], [\"///\", {\n      token: \"regexp\",\n      next: \"@hereregexp\"\n    }], [/^(\\s*)(@regEx)/, [\"\", \"regexp\"]], [/(\\,)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]], [/(\\:)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]], [/@symbols/, \"delimiter\"], [/\\d+[eE]([\\-+]?\\d+)?/, \"number.float\"], [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F]+/, \"number.hex\"], [/0[0-7]+(?!\\d)/, \"number.octal\"], [/\\d+/, \"number\"], [/[,.]/, \"delimiter\"], [/\"\"\"/, \"string\", '@herestring.\"\"\"'], [/'''/, \"string\", \"@herestring.'''\"], [/\"/, {\n      cases: {\n        \"@eos\": \"string\",\n        \"@default\": {\n          token: \"string\",\n          next: '@string.\"'\n        }\n      }\n    }], [/'/, {\n      cases: {\n        \"@eos\": \"string\",\n        \"@default\": {\n          token: \"string\",\n          next: \"@string.'\"\n        }\n      }\n    }]],\n    string: [[/[^\"'\\#\\\\]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\./, \"string.escape.invalid\"], [/\\./, \"string.escape.invalid\"], [/#{/, {\n      cases: {\n        '$S2==\"': {\n          token: \"string\",\n          next: \"root.interpolatedstring\"\n        },\n        \"@default\": \"string\"\n      }\n    }], [/[\"']/, {\n      cases: {\n        \"$#==$S2\": {\n          token: \"string\",\n          next: \"@pop\"\n        },\n        \"@default\": \"string\"\n      }\n    }], [/#/, \"string\"]],\n    herestring: [[/(\"\"\"|''')/, {\n      cases: {\n        \"$1==$S2\": {\n          token: \"string\",\n          next: \"@pop\"\n        },\n        \"@default\": \"string\"\n      }\n    }], [/[^#\\\\'\"]+/, \"string\"], [/['\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\./, \"string.escape.invalid\"], [/#{/, {\n      token: \"string.quote\",\n      next: \"root.interpolatedstring\"\n    }], [/#/, \"string\"]],\n    comment: [[/[^#]+/, \"comment\"], [/#/, \"comment\"]],\n    hereregexp: [[/[^\\\\\\/#]+/, \"regexp\"], [/\\\\./, \"regexp\"], [/#.*$/, \"comment\"], [\"///[igm]*\", {\n      token: \"regexp\",\n      next: \"@pop\"\n    }], [/\\//, \"regexp\"]]\n  }\n};\nexport { conf, language };"],"names":["conf","wordPattern","comments","blockComment","lineComment","folding","markers","start","RegExp","end","language","defaultToken","ignoreCase","tokenPostfix","regEx","keywords","symbols","escapes","tokenizer","root","cases","this","token","next","string","herestring","comment","hereregexp"],"sourceRoot":""}