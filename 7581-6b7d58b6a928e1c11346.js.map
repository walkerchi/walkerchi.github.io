{"version":3,"file":"7581-6b7d58b6a928e1c11346.js","mappings":";uNAOA,IAAIA,EAAO,CACTC,SAAU,CACRC,aAAc,CAAC,KAAM,OAEvBC,SAAU,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MACzCC,iBAAkB,CAAC,CACjBC,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,MACN,CACDD,KAAM,KACNC,MAAO,MACN,CACDD,KAAM,IACNC,MAAO,IACPC,MAAO,CAAC,SAAU,YACjB,CACDF,KAAM,IACNC,MAAO,IACPC,MAAO,CAAC,SAAU,cAGlBC,EAAW,CACbC,aAAc,GACdC,aAAc,MACdP,SAAU,CAAC,CACTQ,MAAO,kBACPN,KAAM,IACNC,MAAO,KACN,CACDK,MAAO,wBACPN,KAAM,IACNC,MAAO,KACN,CACDK,MAAO,mBACPN,KAAM,IACNC,MAAO,MAETM,SAAU,CAAC,MAAO,MAAO,QAAS,KAAM,QAAS,OAAQ,UAAW,KAAM,OAAQ,QAAS,MAAO,KAAM,OAAQ,QAAS,MAAO,OAAQ,SAAU,YAAa,OAAQ,UAAW,UAAW,MAAO,OAAQ,UAAW,KAAM,SAAU,KAAM,YAAa,OAAQ,OAAQ,UAAW,MAAO,SAAU,MAAO,SAAU,KAAM,KAAM,YAAa,YAAa,QAAS,SAAU,WAAY,SAAU,MAAO,SAAU,SAAU,SAAU,MAAO,OAAQ,KAAM,MAAO,OAAQ,WAAY,SAAU,QAAS,WAAY,QAAS,MAAO,QAAS,QACnhBC,mBAAoB,CAAC,MAAO,MAAO,UAAW,UAAW,WAAY,UAAW,MAAO,UAAW,QAAS,QAAS,QAAS,QAAS,MAAO,SAAU,OAAQ,WAAY,MAAO,MAAO,SAAU,MAAO,MAAO,SAAU,MAAO,QAAS,WAAY,OAAQ,QAAS,WAAY,OACpRC,kBAAmB,CAAC,UAAW,MAAO,UAAW,WAAY,OAAQ,WAAY,UAAW,WAAY,UAAW,WAAY,QAAS,OAAQ,OAAQ,SAAU,OAAQ,QAC1KC,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1CC,UAAW,CAAC,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,KAAM,KAClDC,WAAY,CAAC,IAAK,KAAM,KAAM,IAAK,IAAK,MACxCC,QAAS,qBACTC,QAAS,4BACTC,UAAW,CACTC,KAAM,CAAC,CAAC,OAAQ,WAAY,CAAC,wBAAyB,CACpDC,MAAO,CACL,YAAa,CACXX,MAAO,cAET,sBAAuB,CACrBA,MAAO,wBAET,qBAAsB,CACpBA,MAAO,oBAET,WAAY,gBAEZ,CACFY,QAAS,eACR,CAAC,aAAc,aAAc,CAAC,2CAA4C,gBAAiB,CAAC,8BAA+B,UAAW,CAAC,WAAY,CACpJD,MAAO,CACL,aAAc,YACd,aAAc,YACd,cAAe,YACf,WAAY,aAEZ,CAAC,WAAY,eAAgB,CAAC,mBAAoB,CAAC,cAAe,gBAAiB,gBAAiB,CAAC,IAAK,WAAY,CAAC,kBAAmB,WAAY,CAAC,IAAK,cAAe,UAC/KE,KAAM,CAAC,CAAC,UAAW,eAAgB,CAAC,WAAY,iBAAkB,CAAC,MAAO,WAAY,CAAC,IAAK,cAAe,SAC3GC,QAAS,CAAC,CAAC,OAAQ,UAAW,SAAU,CAAC,OAAQ,UAAW,QAAS,CAAC,IAAK,YAC3EC,OAAQ,CAAC,CAAC,MAAO,iBAAkB,SAAU,CAAC,MAAO,iBAAkB,QAAS,CAAC,IAAK,mBACtFC,WAAY,CAAC,CAAC,aAAc,SAAU,CAAC,OAAQ,UAAW,YAAa,CAAC,MAAO,iBAAkB","sources":["webpack://gatsby-starter-hello-world/./node_modules/monaco-editor/esm/vs/basic-languages/m3/m3.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.1(337587859b1c171314b40503171188b6cea6a32a)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/m3/m3.ts\nvar conf = {\n  comments: {\n    blockComment: [\"(*\", \"*)\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: \"(*\",\n    close: \"*)\"\n  }, {\n    open: \"<*\",\n    close: \"*>\"\n  }, {\n    open: \"'\",\n    close: \"'\",\n    notIn: [\"string\", \"comment\"]\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: [\"string\", \"comment\"]\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".m3\",\n  brackets: [{\n    token: \"delimiter.curly\",\n    open: \"{\",\n    close: \"}\"\n  }, {\n    token: \"delimiter.parenthesis\",\n    open: \"(\",\n    close: \")\"\n  }, {\n    token: \"delimiter.square\",\n    open: \"[\",\n    close: \"]\"\n  }],\n  keywords: [\"AND\", \"ANY\", \"ARRAY\", \"AS\", \"BEGIN\", \"BITS\", \"BRANDED\", \"BY\", \"CASE\", \"CONST\", \"DIV\", \"DO\", \"ELSE\", \"ELSIF\", \"END\", \"EVAL\", \"EXCEPT\", \"EXCEPTION\", \"EXIT\", \"EXPORTS\", \"FINALLY\", \"FOR\", \"FROM\", \"GENERIC\", \"IF\", \"IMPORT\", \"IN\", \"INTERFACE\", \"LOCK\", \"LOOP\", \"METHODS\", \"MOD\", \"MODULE\", \"NOT\", \"OBJECT\", \"OF\", \"OR\", \"OVERRIDES\", \"PROCEDURE\", \"RAISE\", \"RAISES\", \"READONLY\", \"RECORD\", \"REF\", \"REPEAT\", \"RETURN\", \"REVEAL\", \"SET\", \"THEN\", \"TO\", \"TRY\", \"TYPE\", \"TYPECASE\", \"UNSAFE\", \"UNTIL\", \"UNTRACED\", \"VALUE\", \"VAR\", \"WHILE\", \"WITH\"],\n  reservedConstNames: [\"ABS\", \"ADR\", \"ADRSIZE\", \"BITSIZE\", \"BYTESIZE\", \"CEILING\", \"DEC\", \"DISPOSE\", \"FALSE\", \"FIRST\", \"FLOAT\", \"FLOOR\", \"INC\", \"ISTYPE\", \"LAST\", \"LOOPHOLE\", \"MAX\", \"MIN\", \"NARROW\", \"NEW\", \"NIL\", \"NUMBER\", \"ORD\", \"ROUND\", \"SUBARRAY\", \"TRUE\", \"TRUNC\", \"TYPECODE\", \"VAL\"],\n  reservedTypeNames: [\"ADDRESS\", \"ANY\", \"BOOLEAN\", \"CARDINAL\", \"CHAR\", \"EXTENDED\", \"INTEGER\", \"LONGCARD\", \"LONGINT\", \"LONGREAL\", \"MUTEX\", \"NULL\", \"REAL\", \"REFANY\", \"ROOT\", \"TEXT\"],\n  operators: [\"+\", \"-\", \"*\", \"/\", \"&\", \"^\", \".\"],\n  relations: [\"=\", \"#\", \"<\", \"<=\", \">\", \">=\", \"<:\", \":\"],\n  delimiters: [\"|\", \"..\", \"=>\", \",\", \";\", \":=\"],\n  symbols: /[>=<#.,:;+\\-*/&^]+/,\n  escapes: /\\\\(?:[\\\\fnrt\"']|[0-7]{3})/,\n  tokenizer: {\n    root: [[/_\\w*/, \"invalid\"], [/[a-zA-Z][a-zA-Z0-9_]*/, {\n      cases: {\n        \"@keywords\": {\n          token: \"keyword.$0\"\n        },\n        \"@reservedConstNames\": {\n          token: \"constant.reserved.$0\"\n        },\n        \"@reservedTypeNames\": {\n          token: \"type.reserved.$0\"\n        },\n        \"@default\": \"identifier\"\n      }\n    }], {\n      include: \"@whitespace\"\n    }, [/[{}()\\[\\]]/, \"@brackets\"], [/[0-9]+\\.[0-9]+(?:[DdEeXx][\\+\\-]?[0-9]+)?/, \"number.float\"], [/[0-9]+(?:\\_[0-9a-fA-F]+)?L?/, \"number\"], [/@symbols/, {\n      cases: {\n        \"@operators\": \"operators\",\n        \"@relations\": \"operators\",\n        \"@delimiters\": \"delimiter\",\n        \"@default\": \"invalid\"\n      }\n    }], [/'[^\\\\']'/, \"string.char\"], [/(')(@escapes)(')/, [\"string.char\", \"string.escape\", \"string.char\"]], [/'/, \"invalid\"], [/\"([^\"\\\\]|\\\\.)*$/, \"invalid\"], [/\"/, \"string.text\", \"@text\"]],\n    text: [[/[^\\\\\"]+/, \"string.text\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"invalid\"], [/\"/, \"string.text\", \"@pop\"]],\n    comment: [[/\\(\\*/, \"comment\", \"@push\"], [/\\*\\)/, \"comment\", \"@pop\"], [/./, \"comment\"]],\n    pragma: [[/<\\*/, \"keyword.pragma\", \"@push\"], [/\\*>/, \"keyword.pragma\", \"@pop\"], [/./, \"keyword.pragma\"]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"white\"], [/\\(\\*/, \"comment\", \"@comment\"], [/<\\*/, \"keyword.pragma\", \"@pragma\"]]\n  }\n};\nexport { conf, language };"],"names":["conf","comments","blockComment","brackets","autoClosingPairs","open","close","notIn","language","defaultToken","tokenPostfix","token","keywords","reservedConstNames","reservedTypeNames","operators","relations","delimiters","symbols","escapes","tokenizer","root","cases","include","text","comment","pragma","whitespace"],"sourceRoot":""}