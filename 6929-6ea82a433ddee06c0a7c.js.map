{"version":3,"file":"6929-6ea82a433ddee06c0a7c.js","mappings":";uNAOA,IAAIA,EAAO,CACTC,SAAU,CACRC,YAAa,OAEfC,SAAU,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MACzCC,iBAAkB,CAAC,CACjBC,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,MAETC,iBAAkB,CAAC,CACjBF,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,MAETE,QAAS,CACPC,QAAS,CACPC,MAAO,IAAIC,OAAO,gCAClBC,IAAK,IAAID,OAAO,sCAIlBE,EAAW,CACbC,aAAc,GACdC,YAAY,EACZC,aAAc,OACdb,SAAU,CAAC,CACTc,MAAO,oBACPZ,KAAM,IACNC,MAAO,KACN,CACDW,MAAO,wBACPZ,KAAM,IACNC,MAAO,KACN,CACDW,MAAO,mBACPZ,KAAM,IACNC,MAAO,MAETY,SAAU,4FACVC,QAAS,0BACTC,QAAS,wEACTC,UAAW,CACTC,KAAM,CAAC,CAAC,wBAAyB,CAAC,GAAI,YAAa,CAAC,yBAA0B,CAAC,CAC7EL,MAAO,WACN,CACDA,MAAO,gBACJ,CAAC,aAAc,IAAK,CAAC,iBAAkB,wBAAyB,CAAC,iBAAkB,wBAAyB,CAAC,eAAgB,IAAK,CAAC,OAAQ,WAAY,CAAC,UAAW,YAAa,CAAC,gBAAiB,YAAa,CAAC,aAAc,aAAc,CAAC,WAAY,aAAc,CAAC,2BAA4B,gBAAiB,CAAC,gCAAiC,cAAe,CAAC,MAAO,UAAW,CAAC,QAAS,aAAc,CAAC,IAAK,SAAU,aAAc,CAAC,IAAK,SAAU,cACpcM,OAAQ,CAAC,CAAC,YAAa,CACrBC,MAAO,CACL,OAAQ,CACNP,MAAO,SACPQ,KAAM,WAER,WAAY,YAEZ,CAAC,WAAY,iBAAkB,CAAC,MAAO,yBAA0B,CAAC,WAAY,YAAa,CAAC,gBAAiB,YAAa,CAAC,OAAQ,CACrID,MAAO,CACL,UAAW,CACTP,MAAO,SACPQ,KAAM,QAER,WAAY,YAEZ,CAAC,IAAK,SAAU","sources":["webpack://gatsby-starter-hello-world/./node_modules/monaco-editor/esm/vs/basic-languages/bat/bat.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.1(337587859b1c171314b40503171188b6cea6a32a)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/bat/bat.ts\nvar conf = {\n  comments: {\n    lineComment: \"REM\"\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  surroundingPairs: [{\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#region\"),\n      end: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#endregion\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  ignoreCase: true,\n  tokenPostfix: \".bat\",\n  brackets: [{\n    token: \"delimiter.bracket\",\n    open: \"{\",\n    close: \"}\"\n  }, {\n    token: \"delimiter.parenthesis\",\n    open: \"(\",\n    close: \")\"\n  }, {\n    token: \"delimiter.square\",\n    open: \"[\",\n    close: \"]\"\n  }],\n  keywords: /call|defined|echo|errorlevel|exist|for|goto|if|pause|set|shift|start|title|not|pushd|popd/,\n  symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [[/^(\\s*)(rem(?:\\s.*|))$/, [\"\", \"comment\"]], [/(\\@?)(@keywords)(?!\\w)/, [{\n      token: \"keyword\"\n    }, {\n      token: \"keyword.$2\"\n    }]], [/[ \\t\\r\\n]+/, \"\"], [/setlocal(?!\\w)/, \"keyword.tag-setlocal\"], [/endlocal(?!\\w)/, \"keyword.tag-setlocal\"], [/[a-zA-Z_]\\w*/, \"\"], [/:\\w*/, \"metatag\"], [/%[^%]+%/, \"variable\"], [/%%[\\w]+(?!\\w)/, \"variable\"], [/[{}()\\[\\]]/, \"@brackets\"], [/@symbols/, \"delimiter\"], [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, \"number.hex\"], [/\\d+/, \"number\"], [/[;,.]/, \"delimiter\"], [/\"/, \"string\", '@string.\"'], [/'/, \"string\", \"@string.'\"]],\n    string: [[/[^\\\\\"'%]+/, {\n      cases: {\n        \"@eos\": {\n          token: \"string\",\n          next: \"@popall\"\n        },\n        \"@default\": \"string\"\n      }\n    }], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/%[\\w ]+%/, \"variable\"], [/%%[\\w]+(?!\\w)/, \"variable\"], [/[\"']/, {\n      cases: {\n        \"$#==$S2\": {\n          token: \"string\",\n          next: \"@pop\"\n        },\n        \"@default\": \"string\"\n      }\n    }], [/$/, \"string\", \"@popall\"]]\n  }\n};\nexport { conf, language };"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","ignoreCase","tokenPostfix","token","keywords","symbols","escapes","tokenizer","root","string","cases","next"],"sourceRoot":""}