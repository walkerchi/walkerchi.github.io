{"version":3,"file":"3090-26dde4db530d2c69191c.js","mappings":";uNAOA,IAAIA,EAAO,CACTC,SAAU,CACRC,YAAa,KAEfC,SAAU,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,KAAM,SAAU,CAAC,QAAS,YAAa,CAAC,MAAO,UAAW,CAAC,MAAO,WACtGC,iBAAkB,CAAC,CACjBC,KAAM,IACNC,MAAO,IACPC,MAAO,CAAC,SAAU,YACjB,CACDF,KAAM,IACNC,MAAO,IACPC,MAAO,CAAC,SAAU,YACjB,CACDF,KAAM,IACNC,MAAO,IACPC,MAAO,CAAC,SAAU,cAGlBC,EAAW,CACbC,aAAc,GACdC,aAAc,MACdC,YAAY,EACZR,SAAU,CAAC,CACTS,MAAO,kBACPP,KAAM,IACNC,MAAO,KACN,CACDM,MAAO,wBACPP,KAAM,IACNC,MAAO,KACN,CACDM,MAAO,iBACPP,KAAM,KACNC,MAAO,SACN,CACDM,MAAO,oBACPP,KAAM,QACNC,MAAO,YACN,CACDM,MAAO,kBACPP,KAAM,MACNC,MAAO,UACN,CACDM,MAAO,kBACPP,KAAM,MACNC,MAAO,WAETO,SAAU,CAAC,OAAQ,SAAU,SAAU,QAAS,SAAU,WAAY,MAAO,OAAQ,KAAM,OAAQ,MAAO,OAAQ,KAAM,SACxHC,SAAU,CAAC,KAAM,MAAO,QAAS,OACjCC,UAAW,CAAC,IAAK,IAAK,KAAM,KAAM,KAAM,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,KACzEC,WAAY,iBACZC,QAAS,oBACTC,QAAS,wEACTC,UAAW,CACTC,KAAM,CAAC,CACLC,QAAS,eACR,CAAC,uBAAwB,QAAS,CAAC,cAAe,CACnDC,MAAO,CACL,YAAa,CACXV,MAAO,cAET,aAAc,WACd,WAAY,mBAEZ,CAAC,qBAAsB,CACzBU,MAAO,CACLC,GAAI,CAAC,YAAa,eAClB,WAAY,MAEZ,CAAC,WAAY,gBAAiB,CAAC,MAAO,UAAW,CAAC,WAAY,aAAc,CAAC,WAAY,CAC3FD,MAAO,CACL,aAAc,WACd,WAAY,eAEZ,CAAC,kBAAmB,kBAAmB,CAAC,IAAK,SAAU,YAC3DE,WAAY,CAAC,CAAC,aAAc,IAAK,CAAC,UAAW,YAC7CC,OAAQ,CAAC,CAAC,UAAW,UAAW,CAAC,WAAY,iBAAkB,CAAC,MAAO,yBAA0B,CAAC,MAAO,SAAU","sources":["webpack://gatsby-starter-hello-world/./node_modules/monaco-editor/esm/vs/basic-languages/sb/sb.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.1(337587859b1c171314b40503171188b6cea6a32a)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/sb/sb.ts\nvar conf = {\n  comments: {\n    lineComment: \"'\"\n  },\n  brackets: [[\"(\", \")\"], [\"[\", \"]\"], [\"If\", \"EndIf\"], [\"While\", \"EndWhile\"], [\"For\", \"EndFor\"], [\"Sub\", \"EndSub\"]],\n  autoClosingPairs: [{\n    open: '\"',\n    close: '\"',\n    notIn: [\"string\", \"comment\"]\n  }, {\n    open: \"(\",\n    close: \")\",\n    notIn: [\"string\", \"comment\"]\n  }, {\n    open: \"[\",\n    close: \"]\",\n    notIn: [\"string\", \"comment\"]\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".sb\",\n  ignoreCase: true,\n  brackets: [{\n    token: \"delimiter.array\",\n    open: \"[\",\n    close: \"]\"\n  }, {\n    token: \"delimiter.parenthesis\",\n    open: \"(\",\n    close: \")\"\n  }, {\n    token: \"keyword.tag-if\",\n    open: \"If\",\n    close: \"EndIf\"\n  }, {\n    token: \"keyword.tag-while\",\n    open: \"While\",\n    close: \"EndWhile\"\n  }, {\n    token: \"keyword.tag-for\",\n    open: \"For\",\n    close: \"EndFor\"\n  }, {\n    token: \"keyword.tag-sub\",\n    open: \"Sub\",\n    close: \"EndSub\"\n  }],\n  keywords: [\"Else\", \"ElseIf\", \"EndFor\", \"EndIf\", \"EndSub\", \"EndWhile\", \"For\", \"Goto\", \"If\", \"Step\", \"Sub\", \"Then\", \"To\", \"While\"],\n  tagwords: [\"If\", \"Sub\", \"While\", \"For\"],\n  operators: [\">\", \"<\", \"<>\", \"<=\", \">=\", \"And\", \"Or\", \"+\", \"-\", \"*\", \"/\", \"=\"],\n  identifier: /[a-zA-Z_][\\w]*/,\n  symbols: /[=><:+\\-*\\/%\\.,]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [{\n      include: \"@whitespace\"\n    }, [/(@identifier)(?=[.])/, \"type\"], [/@identifier/, {\n      cases: {\n        \"@keywords\": {\n          token: \"keyword.$0\"\n        },\n        \"@operators\": \"operator\",\n        \"@default\": \"variable.name\"\n      }\n    }], [/([.])(@identifier)/, {\n      cases: {\n        $2: [\"delimiter\", \"type.member\"],\n        \"@default\": \"\"\n      }\n    }], [/\\d*\\.\\d+/, \"number.float\"], [/\\d+/, \"number\"], [/[()\\[\\]]/, \"@brackets\"], [/@symbols/, {\n      cases: {\n        \"@operators\": \"operator\",\n        \"@default\": \"delimiter\"\n      }\n    }], [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/\"/, \"string\", \"@string\"]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/(\\').*$/, \"comment\"]],\n    string: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"C?/, \"string\", \"@pop\"]]\n  }\n};\nexport { conf, language };"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","notIn","language","defaultToken","tokenPostfix","ignoreCase","token","keywords","tagwords","operators","identifier","symbols","escapes","tokenizer","root","include","cases","$2","whitespace","string"],"sourceRoot":""}