{"version":3,"file":"4710-57ecdc607dcd11b7c279.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./node_modules/monaco-editor/esm/vs/basic-languages/elixir/elixir.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.1(337587859b1c171314b40503171188b6cea6a32a)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/elixir/elixir.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  autoClosingPairs: [{\n    open: \"'\",\n    close: \"'\",\n    notIn: [\"string\", \"comment\"]\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: [\"comment\"]\n  }, {\n    open: '\"\"\"',\n    close: '\"\"\"'\n  }, {\n    open: \"`\",\n    close: \"`\",\n    notIn: [\"string\", \"comment\"]\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"<<\",\n    close: \">>\"\n  }],\n  indentationRules: {\n    increaseIndentPattern: /^\\s*(after|else|catch|rescue|fn|[^#]*(do|<\\-|\\->|\\{|\\[|\\=))\\s*$/,\n    decreaseIndentPattern: /^\\s*((\\}|\\])\\s*$|(after|else|catch|rescue|end)\\b)/\n  }\n};\nvar language = {\n  defaultToken: \"source\",\n  tokenPostfix: \".elixir\",\n  brackets: [{\n    open: \"[\",\n    close: \"]\",\n    token: \"delimiter.square\"\n  }, {\n    open: \"(\",\n    close: \")\",\n    token: \"delimiter.parenthesis\"\n  }, {\n    open: \"{\",\n    close: \"}\",\n    token: \"delimiter.curly\"\n  }, {\n    open: \"<<\",\n    close: \">>\",\n    token: \"delimiter.angle.special\"\n  }],\n  declarationKeywords: [\"def\", \"defp\", \"defn\", \"defnp\", \"defguard\", \"defguardp\", \"defmacro\", \"defmacrop\", \"defdelegate\", \"defcallback\", \"defmacrocallback\", \"defmodule\", \"defprotocol\", \"defexception\", \"defimpl\", \"defstruct\"],\n  operatorKeywords: [\"and\", \"in\", \"not\", \"or\", \"when\"],\n  namespaceKeywords: [\"alias\", \"import\", \"require\", \"use\"],\n  otherKeywords: [\"after\", \"case\", \"catch\", \"cond\", \"do\", \"else\", \"end\", \"fn\", \"for\", \"if\", \"quote\", \"raise\", \"receive\", \"rescue\", \"super\", \"throw\", \"try\", \"unless\", \"unquote_splicing\", \"unquote\", \"with\"],\n  constants: [\"true\", \"false\", \"nil\"],\n  nameBuiltin: [\"__MODULE__\", \"__DIR__\", \"__ENV__\", \"__CALLER__\", \"__STACKTRACE__\"],\n  operator: /-[->]?|!={0,2}|\\*{1,2}|\\/|\\\\\\\\|&{1,3}|\\.\\.?|\\^(?:\\^\\^)?|\\+\\+?|<(?:-|<<|=|>|\\|>|~>?)?|=~|={1,3}|>(?:=|>>)?|\\|~>|\\|>|\\|{1,3}|~>>?|~~~|::/,\n  variableName: /[a-z_][a-zA-Z0-9_]*[?!]?/,\n  atomName: /[a-zA-Z_][a-zA-Z0-9_@]*[?!]?|@specialAtomName|@operator/,\n  specialAtomName: /\\.\\.\\.|<<>>|%\\{\\}|%|\\{\\}/,\n  aliasPart: /[A-Z][a-zA-Z0-9_]*/,\n  moduleName: /@aliasPart(?:\\.@aliasPart)*/,\n  sigilSymmetricDelimiter: /\"\"\"|'''|\"|'|\\/|\\|/,\n  sigilStartDelimiter: /@sigilSymmetricDelimiter|<|\\{|\\[|\\(/,\n  sigilEndDelimiter: /@sigilSymmetricDelimiter|>|\\}|\\]|\\)/,\n  sigilModifiers: /[a-zA-Z0-9]*/,\n  decimal: /\\d(?:_?\\d)*/,\n  hex: /[0-9a-fA-F](_?[0-9a-fA-F])*/,\n  octal: /[0-7](_?[0-7])*/,\n  binary: /[01](_?[01])*/,\n  escape: /\\\\u[0-9a-fA-F]{4}|\\\\x[0-9a-fA-F]{2}|\\\\./,\n  tokenizer: {\n    root: [{\n      include: \"@whitespace\"\n    }, {\n      include: \"@comments\"\n    }, {\n      include: \"@keywordsShorthand\"\n    }, {\n      include: \"@numbers\"\n    }, {\n      include: \"@identifiers\"\n    }, {\n      include: \"@strings\"\n    }, {\n      include: \"@atoms\"\n    }, {\n      include: \"@sigils\"\n    }, {\n      include: \"@attributes\"\n    }, {\n      include: \"@symbols\"\n    }],\n    whitespace: [[/\\s+/, \"white\"]],\n    comments: [[/(#)(.*)/, [\"comment.punctuation\", \"comment\"]]],\n    keywordsShorthand: [[/(@atomName)(:)/, [\"constant\", \"constant.punctuation\"]], [/\"(?=([^\"]|#\\{.*?\\}|\\\\\")*\":)/, {\n      token: \"constant.delimiter\",\n      next: \"@doubleQuotedStringKeyword\"\n    }], [/'(?=([^']|#\\{.*?\\}|\\\\')*':)/, {\n      token: \"constant.delimiter\",\n      next: \"@singleQuotedStringKeyword\"\n    }]],\n    doubleQuotedStringKeyword: [[/\":/, {\n      token: \"constant.delimiter\",\n      next: \"@pop\"\n    }], {\n      include: \"@stringConstantContentInterpol\"\n    }],\n    singleQuotedStringKeyword: [[/':/, {\n      token: \"constant.delimiter\",\n      next: \"@pop\"\n    }], {\n      include: \"@stringConstantContentInterpol\"\n    }],\n    numbers: [[/0b@binary/, \"number.binary\"], [/0o@octal/, \"number.octal\"], [/0x@hex/, \"number.hex\"], [/@decimal\\.@decimal([eE]-?@decimal)?/, \"number.float\"], [/@decimal/, \"number\"]],\n    identifiers: [[/\\b(defp?|defnp?|defmacrop?|defguardp?|defdelegate)(\\s+)(@variableName)(?!\\s+@operator)/, [\"keyword.declaration\", \"white\", {\n      cases: {\n        unquote: \"keyword\",\n        \"@default\": \"function\"\n      }\n    }]], [/(@variableName)(?=\\s*\\.?\\s*\\()/, {\n      cases: {\n        \"@declarationKeywords\": \"keyword.declaration\",\n        \"@namespaceKeywords\": \"keyword\",\n        \"@otherKeywords\": \"keyword\",\n        \"@default\": \"function.call\"\n      }\n    }], [/(@moduleName)(\\s*)(\\.)(\\s*)(@variableName)/, [\"type.identifier\", \"white\", \"operator\", \"white\", \"function.call\"]], [/(:)(@atomName)(\\s*)(\\.)(\\s*)(@variableName)/, [\"constant.punctuation\", \"constant\", \"white\", \"operator\", \"white\", \"function.call\"]], [/(\\|>)(\\s*)(@variableName)/, [\"operator\", \"white\", {\n      cases: {\n        \"@otherKeywords\": \"keyword\",\n        \"@default\": \"function.call\"\n      }\n    }]], [/(&)(\\s*)(@variableName)/, [\"operator\", \"white\", \"function.call\"]], [/@variableName/, {\n      cases: {\n        \"@declarationKeywords\": \"keyword.declaration\",\n        \"@operatorKeywords\": \"keyword.operator\",\n        \"@namespaceKeywords\": \"keyword\",\n        \"@otherKeywords\": \"keyword\",\n        \"@constants\": \"constant.language\",\n        \"@nameBuiltin\": \"variable.language\",\n        \"_.*\": \"comment.unused\",\n        \"@default\": \"identifier\"\n      }\n    }], [/@moduleName/, \"type.identifier\"]],\n    strings: [[/\"\"\"/, {\n      token: \"string.delimiter\",\n      next: \"@doubleQuotedHeredoc\"\n    }], [/'''/, {\n      token: \"string.delimiter\",\n      next: \"@singleQuotedHeredoc\"\n    }], [/\"/, {\n      token: \"string.delimiter\",\n      next: \"@doubleQuotedString\"\n    }], [/'/, {\n      token: \"string.delimiter\",\n      next: \"@singleQuotedString\"\n    }]],\n    doubleQuotedHeredoc: [[/\"\"\"/, {\n      token: \"string.delimiter\",\n      next: \"@pop\"\n    }], {\n      include: \"@stringContentInterpol\"\n    }],\n    singleQuotedHeredoc: [[/'''/, {\n      token: \"string.delimiter\",\n      next: \"@pop\"\n    }], {\n      include: \"@stringContentInterpol\"\n    }],\n    doubleQuotedString: [[/\"/, {\n      token: \"string.delimiter\",\n      next: \"@pop\"\n    }], {\n      include: \"@stringContentInterpol\"\n    }],\n    singleQuotedString: [[/'/, {\n      token: \"string.delimiter\",\n      next: \"@pop\"\n    }], {\n      include: \"@stringContentInterpol\"\n    }],\n    atoms: [[/(:)(@atomName)/, [\"constant.punctuation\", \"constant\"]], [/:\"/, {\n      token: \"constant.delimiter\",\n      next: \"@doubleQuotedStringAtom\"\n    }], [/:'/, {\n      token: \"constant.delimiter\",\n      next: \"@singleQuotedStringAtom\"\n    }]],\n    doubleQuotedStringAtom: [[/\"/, {\n      token: \"constant.delimiter\",\n      next: \"@pop\"\n    }], {\n      include: \"@stringConstantContentInterpol\"\n    }],\n    singleQuotedStringAtom: [[/'/, {\n      token: \"constant.delimiter\",\n      next: \"@pop\"\n    }], {\n      include: \"@stringConstantContentInterpol\"\n    }],\n    sigils: [[/~[a-z]@sigilStartDelimiter/, {\n      token: \"@rematch\",\n      next: \"@sigil.interpol\"\n    }], [/~[A-Z]@sigilStartDelimiter/, {\n      token: \"@rematch\",\n      next: \"@sigil.noInterpol\"\n    }]],\n    sigil: [[/~([a-zA-Z])\\{/, {\n      token: \"@rematch\",\n      switchTo: \"@sigilStart.$S2.$1.{.}\"\n    }], [/~([a-zA-Z])\\[/, {\n      token: \"@rematch\",\n      switchTo: \"@sigilStart.$S2.$1.[.]\"\n    }], [/~([a-zA-Z])\\(/, {\n      token: \"@rematch\",\n      switchTo: \"@sigilStart.$S2.$1.(.)\"\n    }], [/~([a-zA-Z])\\</, {\n      token: \"@rematch\",\n      switchTo: \"@sigilStart.$S2.$1.<.>\"\n    }], [/~([a-zA-Z])(@sigilSymmetricDelimiter)/, {\n      token: \"@rematch\",\n      switchTo: \"@sigilStart.$S2.$1.$2.$2\"\n    }]],\n    \"sigilStart.interpol.s\": [[/~s@sigilStartDelimiter/, {\n      token: \"string.delimiter\",\n      switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n    }]],\n    \"sigilContinue.interpol.s\": [[/(@sigilEndDelimiter)@sigilModifiers/, {\n      cases: {\n        \"$1==$S5\": {\n          token: \"string.delimiter\",\n          next: \"@pop\"\n        },\n        \"@default\": \"string\"\n      }\n    }], {\n      include: \"@stringContentInterpol\"\n    }],\n    \"sigilStart.noInterpol.S\": [[/~S@sigilStartDelimiter/, {\n      token: \"string.delimiter\",\n      switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n    }]],\n    \"sigilContinue.noInterpol.S\": [[/(^|[^\\\\])\\\\@sigilEndDelimiter/, \"string\"], [/(@sigilEndDelimiter)@sigilModifiers/, {\n      cases: {\n        \"$1==$S5\": {\n          token: \"string.delimiter\",\n          next: \"@pop\"\n        },\n        \"@default\": \"string\"\n      }\n    }], {\n      include: \"@stringContent\"\n    }],\n    \"sigilStart.interpol.r\": [[/~r@sigilStartDelimiter/, {\n      token: \"regexp.delimiter\",\n      switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n    }]],\n    \"sigilContinue.interpol.r\": [[/(@sigilEndDelimiter)@sigilModifiers/, {\n      cases: {\n        \"$1==$S5\": {\n          token: \"regexp.delimiter\",\n          next: \"@pop\"\n        },\n        \"@default\": \"regexp\"\n      }\n    }], {\n      include: \"@regexpContentInterpol\"\n    }],\n    \"sigilStart.noInterpol.R\": [[/~R@sigilStartDelimiter/, {\n      token: \"regexp.delimiter\",\n      switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n    }]],\n    \"sigilContinue.noInterpol.R\": [[/(^|[^\\\\])\\\\@sigilEndDelimiter/, \"regexp\"], [/(@sigilEndDelimiter)@sigilModifiers/, {\n      cases: {\n        \"$1==$S5\": {\n          token: \"regexp.delimiter\",\n          next: \"@pop\"\n        },\n        \"@default\": \"regexp\"\n      }\n    }], {\n      include: \"@regexpContent\"\n    }],\n    \"sigilStart.interpol\": [[/~([a-zA-Z])@sigilStartDelimiter/, {\n      token: \"sigil.delimiter\",\n      switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n    }]],\n    \"sigilContinue.interpol\": [[/(@sigilEndDelimiter)@sigilModifiers/, {\n      cases: {\n        \"$1==$S5\": {\n          token: \"sigil.delimiter\",\n          next: \"@pop\"\n        },\n        \"@default\": \"sigil\"\n      }\n    }], {\n      include: \"@sigilContentInterpol\"\n    }],\n    \"sigilStart.noInterpol\": [[/~([a-zA-Z])@sigilStartDelimiter/, {\n      token: \"sigil.delimiter\",\n      switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n    }]],\n    \"sigilContinue.noInterpol\": [[/(^|[^\\\\])\\\\@sigilEndDelimiter/, \"sigil\"], [/(@sigilEndDelimiter)@sigilModifiers/, {\n      cases: {\n        \"$1==$S5\": {\n          token: \"sigil.delimiter\",\n          next: \"@pop\"\n        },\n        \"@default\": \"sigil\"\n      }\n    }], {\n      include: \"@sigilContent\"\n    }],\n    attributes: [[/\\@(module|type)?doc (~[sS])?\"\"\"/, {\n      token: \"comment.block.documentation\",\n      next: \"@doubleQuotedHeredocDocstring\"\n    }], [/\\@(module|type)?doc (~[sS])?\"/, {\n      token: \"comment.block.documentation\",\n      next: \"@doubleQuotedStringDocstring\"\n    }], [/\\@(module|type)?doc false/, \"comment.block.documentation\"], [/\\@(@variableName)/, \"variable\"]],\n    doubleQuotedHeredocDocstring: [[/\"\"\"/, {\n      token: \"comment.block.documentation\",\n      next: \"@pop\"\n    }], {\n      include: \"@docstringContent\"\n    }],\n    doubleQuotedStringDocstring: [[/\"/, {\n      token: \"comment.block.documentation\",\n      next: \"@pop\"\n    }], {\n      include: \"@docstringContent\"\n    }],\n    symbols: [[/\\?(\\\\.|[^\\\\\\s])/, \"number.constant\"], [/&\\d+/, \"operator\"], [/<<<|>>>/, \"operator\"], [/[()\\[\\]\\{\\}]|<<|>>/, \"@brackets\"], [/\\.\\.\\./, \"identifier\"], [/=>/, \"punctuation\"], [/@operator/, \"operator\"], [/[:;,.%]/, \"punctuation\"]],\n    stringContentInterpol: [{\n      include: \"@interpolation\"\n    }, {\n      include: \"@escapeChar\"\n    }, {\n      include: \"@stringContent\"\n    }],\n    stringContent: [[/./, \"string\"]],\n    stringConstantContentInterpol: [{\n      include: \"@interpolation\"\n    }, {\n      include: \"@escapeChar\"\n    }, {\n      include: \"@stringConstantContent\"\n    }],\n    stringConstantContent: [[/./, \"constant\"]],\n    regexpContentInterpol: [{\n      include: \"@interpolation\"\n    }, {\n      include: \"@escapeChar\"\n    }, {\n      include: \"@regexpContent\"\n    }],\n    regexpContent: [[/(\\s)(#)(\\s.*)$/, [\"white\", \"comment.punctuation\", \"comment\"]], [/./, \"regexp\"]],\n    sigilContentInterpol: [{\n      include: \"@interpolation\"\n    }, {\n      include: \"@escapeChar\"\n    }, {\n      include: \"@sigilContent\"\n    }],\n    sigilContent: [[/./, \"sigil\"]],\n    docstringContent: [[/./, \"comment.block.documentation\"]],\n    escapeChar: [[/@escape/, \"constant.character.escape\"]],\n    interpolation: [[/#{/, {\n      token: \"delimiter.bracket.embed\",\n      next: \"@interpolationContinue\"\n    }]],\n    interpolationContinue: [[/}/, {\n      token: \"delimiter.bracket.embed\",\n      next: \"@pop\"\n    }], {\n      include: \"@root\"\n    }]\n  }\n};\nexport { conf, language };"],"names":["conf","comments","lineComment","brackets","surroundingPairs","open","close","autoClosingPairs","notIn","indentationRules","increaseIndentPattern","decreaseIndentPattern","language","defaultToken","tokenPostfix","token","declarationKeywords","operatorKeywords","namespaceKeywords","otherKeywords","constants","nameBuiltin","operator","variableName","atomName","specialAtomName","aliasPart","moduleName","sigilSymmetricDelimiter","sigilStartDelimiter","sigilEndDelimiter","sigilModifiers","decimal","hex","octal","binary","escape","tokenizer","root","include","whitespace","keywordsShorthand","next","doubleQuotedStringKeyword","singleQuotedStringKeyword","numbers","identifiers","cases","unquote","strings","doubleQuotedHeredoc","singleQuotedHeredoc","doubleQuotedString","singleQuotedString","atoms","doubleQuotedStringAtom","singleQuotedStringAtom","sigils","sigil","switchTo","attributes","doubleQuotedHeredocDocstring","doubleQuotedStringDocstring","symbols","stringContentInterpol","stringContent","stringConstantContentInterpol","stringConstantContent","regexpContentInterpol","regexpContent","sigilContentInterpol","sigilContent","docstringContent","escapeChar","interpolation","interpolationContinue"],"sourceRoot":""}