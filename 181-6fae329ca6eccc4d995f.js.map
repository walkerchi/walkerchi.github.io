{"version":3,"file":"181-6fae329ca6eccc4d995f.js","mappings":";sNAOA,IAAIA,EAAO,CACTC,SAAU,CACRC,aAAc,CAAC,KAAM,MACrBC,YAAa,MAEfC,SAAU,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MACzCC,iBAAkB,CAAC,CACjBC,KAAM,IACNC,MAAO,IACPC,MAAO,CAAC,WACP,CACDF,KAAM,IACNC,MAAO,IACPC,MAAO,CAAC,WACP,CACDF,KAAM,IACNC,MAAO,IACPC,MAAO,CAAC,WACP,CACDF,KAAM,IACNC,MAAO,IACPC,MAAO,CAAC,WACP,CACDF,KAAM,IACNC,MAAO,IACPC,MAAO,CAAC,YAEVC,iBAAkB,CAAC,CACjBH,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,OAGPG,EAAW,CACbC,aAAc,GACdC,aAAc,QACdC,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,KAAM,OAAQ,OAAQ,SAAU,SAAU,WACxGC,MAAO,CAAC,KAAM,UAAW,OAAQ,MAAO,SAAU,SAAU,OAAQ,OAAQ,MAAO,OAAQ,QAAS,QACpGC,UAAW,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,MAAO,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,IAAK,KAAM,KAChJC,QAAS,4BACTC,QAAS,wEACTC,UAAW,CACTC,KAAM,CAAC,CAAC,eAAgB,CACtBC,MAAO,CACL,YAAa,UACb,SAAU,OACV,WAAY,gBAEZ,CACFC,QAAS,eACR,CAAC,aAAc,aAAc,CAAC,mBAAoB,aAAc,CAAC,WAAY,CAC9ED,MAAO,CACL,aAAc,YACd,WAAY,MAEZ,CAAC,6EAA8E,UAAW,CAAC,QAAS,aAAc,CAAC,kBAAmB,kBAAmB,CAAC,IAAK,SAAU,YAC7KE,WAAY,CAAC,CAAC,aAAc,IAAK,CAAC,OAAQ,UAAW,YAAa,CAAC,UAAW,YAC9EC,QAAS,CAAC,CAAC,UAAW,WAAY,CAAC,OAAQ,UAAW,QAAS,CAAC,QAAS,YACzEC,OAAQ,CAAC,CAAC,UAAW,UAAW,CAAC,WAAY,iBAAkB,CAAC,MAAO,yBAA0B,CAAC,IAAK,SAAU","sources":["webpack://gatsby-starter-hello-world/./node_modules/monaco-editor/esm/vs/basic-languages/flow9/flow9.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.1(337587859b1c171314b40503171188b6cea6a32a)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/flow9/flow9.ts\nvar conf = {\n  comments: {\n    blockComment: [\"/*\", \"*/\"],\n    lineComment: \"//\"\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\",\n    notIn: [\"string\"]\n  }, {\n    open: \"[\",\n    close: \"]\",\n    notIn: [\"string\"]\n  }, {\n    open: \"(\",\n    close: \")\",\n    notIn: [\"string\"]\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: [\"string\"]\n  }, {\n    open: \"'\",\n    close: \"'\",\n    notIn: [\"string\"]\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"<\",\n    close: \">\"\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".flow\",\n  keywords: [\"import\", \"require\", \"export\", \"forbid\", \"native\", \"if\", \"else\", \"cast\", \"unsafe\", \"switch\", \"default\"],\n  types: [\"io\", \"mutable\", \"bool\", \"int\", \"double\", \"string\", \"flow\", \"void\", \"ref\", \"true\", \"false\", \"with\"],\n  operators: [\"=\", \">\", \"<\", \"<=\", \">=\", \"==\", \"!\", \"!=\", \":=\", \"::=\", \"&&\", \"||\", \"+\", \"-\", \"*\", \"/\", \"@\", \"&\", \"%\", \":\", \"->\", \"\\\\\", \"$\", \"??\", \"^\"],\n  symbols: /[@$=><!~?:&|+\\-*\\\\\\/\\^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [[/[a-zA-Z_]\\w*/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"@types\": \"type\",\n        \"@default\": \"identifier\"\n      }\n    }], {\n      include: \"@whitespace\"\n    }, [/[{}()\\[\\]]/, \"delimiter\"], [/[<>](?!@symbols)/, \"delimiter\"], [/@symbols/, {\n      cases: {\n        \"@operators\": \"delimiter\",\n        \"@default\": \"\"\n      }\n    }], [/((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)/, \"number\"], [/[;,.]/, \"delimiter\"], [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/\"/, \"string\", \"@string\"]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"]],\n    comment: [[/[^\\/*]+/, \"comment\"], [/\\*\\//, \"comment\", \"@pop\"], [/[\\/*]/, \"comment\"]],\n    string: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"/, \"string\", \"@pop\"]]\n  }\n};\nexport { conf, language };"],"names":["conf","comments","blockComment","lineComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","language","defaultToken","tokenPostfix","keywords","types","operators","symbols","escapes","tokenizer","root","cases","include","whitespace","comment","string"],"sourceRoot":""}